{"version":3,"sources":["Searchbar/Searchbar.jsx","ImageGalleryItem/ImageGalleryItem.jsx","ImageGallery/ImageGallery.jsx","Button/Button.jsx","Modal/Modal.jsx","Services/ApiId.js","App.js","Services/Api.js","index.js"],"names":["Searchbar","props","useState","keyWord","setKeyWord","className","onSubmit","e","preventDefault","onSubHand","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","ImageGalleryItem","urlImage","altImage","idImage","onSubId","src","alt","data-id","onClick","dataset","id","ImageGallery","onSubIdHend","data","onSubIdHends","gallery","map","obj","webformatURL","tags","urlLargeImage","largeImageURL","require","Button","console","log","page","setPage","prev","onSubPageNum","Modal","imgUrl","setImgUrl","visible","setVisible","handlerKeyDown","code","onCloseHend","useEffect","window","addEventListener","url","fetch","then","res","ok","json","Promise","reject","Error","ApiId","imgId","hits","finally","target","color","height","width","App","images","setImages","imgIdModal","setImgIdModal","newPageCords","setNewPageCords","loader","setLoader","showModal","setShowModal","buttonVisible","setButtonVisible","toggleLoader","toggleModal","seachWord","pageNum","MainApi","scrollTo","top","behavior","cords","document","documentElement","scrollHeight","ReactDOM","render","getElementById"],"mappings":"oSAIe,SAASA,EAAUC,GAAQ,IAAD,EACPC,mBAAS,IADF,mBAC9BC,EAD8B,KACrBC,EADqB,KAWrC,OAAQ,wBAAQC,UAAU,YAAlB,SACJ,uBAAMA,UAAU,aAAaC,SANL,SAAAC,GACxBA,EAAEC,iBACFP,EAAMQ,UAAUN,GAChBC,EAAW,KAGX,UACE,wBAAQM,KAAK,SAASL,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,SAA0C,cAAC,IAAD,QAE5C,uBACUA,UAAU,mBACVK,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,MAAOX,EACfY,SApBkB,SAAAR,GACtBH,EAAWG,EAAES,cAAcF,eCNpB,SAASG,EAAT,GAAgE,IAArCC,EAAoC,EAApCA,SAASC,EAA2B,EAA3BA,SAASC,EAAkB,EAAlBA,QAAQC,EAAU,EAAVA,QAIlE,OACI,oBAAIhB,UAAU,mBAAd,SACE,qBACEiB,IAAKJ,EACLK,IAAKJ,EACLK,UAASJ,EACTf,UAAU,yBACVoB,QAVU,SAAAlB,GAClBc,EAAQd,EAAES,cAAcU,QAAQC,SCHnB,SAASC,EAAa3B,GACjC,IAAM4B,EAAc,SAAAC,GACpB7B,EAAM8B,aAAaD,IAEvB,OACY,oBAAIzB,UAAU,eAAd,SACKJ,EAAM+B,QAAQC,KAAI,SAAAC,GACf,OAAQ,cAACjB,EAAD,CAAkBI,QAASQ,EAAaX,SAAUgB,EAAIC,aAAchB,SAAUe,EAAIE,KAAMC,cAAeH,EAAII,cAAelB,QAASc,EAAIP,IAASO,EAAIP,S,ICRxKzB,EAAaqC,EAAQ,GAArBrC,SAGO,SAASsC,EAAOvC,GAC3BwC,QAAQC,IAAIzC,GADsB,MAEVC,EAAS,GAFC,mBAE3ByC,EAF2B,KAErBC,EAFqB,KAOtC,OAAO,wBAAQlC,KAAK,SAASe,QAJH,WAClBmB,GAAQ,SAAAC,GAAI,OAAIA,EAAO,KACvB5C,EAAM6C,aAAaH,IAEuBtC,UAAU,SAArD,uBCJQ,SAAS0C,EAAM9C,GAAQ,IAAD,EACLC,qBADK,mBAC1B8C,EAD0B,KAClBC,EADkB,OAEN/C,oBAAS,GAFH,mBAE1BgD,EAF0B,KAElBC,EAFkB,KAI5BC,EAAiB,SAAC,GACV,WADuB,EAAXC,MAEvBpD,EAAMqD,eAYZ,OAJIC,qBAAU,WACNC,OAAOC,iBAAiB,UAAWL,GCrB5B,SAAezB,GAC1B,IACM+B,EAAG,sCAAkC/B,EAAlC,gBADG,sCAER,OAAOgC,MAAMD,GAAKE,MAAK,SAAAC,GACnB,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAO,IAAIC,MAAM,gMDepCC,CAAMlE,EAAMmE,OAAOR,MAAK,YAAW,IAATS,EAAQ,EAARA,KAASpB,EAAUoB,EAAK,GAAG/B,kBAAiBgC,SAAQ,kBAAInB,GAAW,SAE7F,qBAAK9C,UAAU,UAAUoB,QATd,SAAAlB,GACPA,EAAES,gBAAkBT,EAAEgE,QACtBtE,EAAMqD,eAOV,SACI,sBAAKjD,UAAU,QAAf,UACK6C,GAAS,cAAC,IAAD,CAClBxC,KAAK,YACL8D,MAAM,UACNC,OAAQ,IACIC,MAAO,MAEX,qBAAKpD,IAAK0B,EAAQzB,IAAI,UEtBvB,SAASoD,IAAO,IAAD,EACIzE,mBAAS,MADb,mBACnBC,EADmB,KACVC,EADU,OAEFF,mBAAS,GAFP,mBAEnByC,EAFmB,KAEbC,EAFa,OAGE1C,mBAAS,IAHX,mBAGnB0E,EAHmB,KAGXC,EAHW,OAIU3E,mBAAS,IAJnB,mBAInB4E,EAJmB,KAIPC,EAJO,OAKc7E,mBAAS,GALvB,mBAKnB8E,EALmB,KAKLC,EALK,OAME/E,oBAAS,GANX,mBAMnBgF,EANmB,KAMXC,EANW,OAOQjF,oBAAS,GAPjB,mBAOnBkF,EAPmB,KAORC,EAPQ,OAQgBnF,oBAAS,GARzB,mBAQnBoF,EARmB,KAQJC,EARI,KAUpBC,EAAe,WACjBL,GAAU,SAAAtC,GAAI,OAAKA,MAEjB4C,EAAc,WAChBJ,GAAa,SAAAxC,GAAI,OAAKA,MAsC1B,OAbAU,qBAAU,WACFpD,IACAqF,ICnDG,SAAiBE,EAAUC,GAClC,IACEjC,EAAG,qCAAiCgC,EAAjC,iBAAmDC,EAAnD,gBADK,qCACL,wDACT,OAAOhC,MAAMD,GAAKE,MAAK,SAAAC,GACf,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAO,IAAIC,MAAM,gMD6ChC0B,CAAQzF,EAASwC,GAAMiB,MAAK,YAAe,IAAZS,EAAW,EAAXA,KAAaQ,GAAU,SAAAhC,GAAI,OAAI+B,IAAW,GAAKP,EAAhB,sBAA4BxB,GAA5B,YAAqCwB,OAASkB,GAAiB,MACxHjB,SAAQ,WACLkB,IAXRhC,OAAOqC,SAAS,CACZC,IAAKd,EACLe,SAAU,iBAenB,CAAC5F,EAASwC,IAEL,sBAAKtC,UAAU,iBAAf,UACJ,cAACL,EAAD,CAAWS,UArCa,SAAAqB,GACxB+C,EAAU,IACVzE,EAAW0B,GACXc,EAAQ,MAmCV,cAAChB,EAAD,CAAcI,QAAS4C,EAAQ7C,aA5BV,SAAAD,GACnB0D,IACAC,IACAV,EAAcjD,GACd0D,OAyBDN,GAAU,cAAC,IAAD,CACTxE,KAAK,YACL8D,MAAM,UACNC,OAAQ,IACRC,MAAO,MAENY,GAAiB,cAAC9C,EAAD,CAAQM,aAxCN,SAAAhB,GACpB,IAAMkE,EAAQC,SAASC,gBAAgBC,aAAe,IACtDvD,EAAQd,GACRmD,EAAgBe,MAsCjBZ,GACC,cAACrC,EAAD,CACAO,YAAamC,EACbrB,MAAOU,OEtEfsB,IAASC,OACP,cAAC,EAAD,IAASJ,SAASK,eAAe,W","file":"static/js/main.d1eb9b9e.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Searchbar(props) {\r\n    const [keyWord, setKeyWord] = useState('');\r\n    \r\n    const hendleInputChanga = e => {\r\n        setKeyWord(e.currentTarget.value);\r\n    }\r\n    const  onSubmitSearchForm = e => {\r\n        e.preventDefault();\r\n        props.onSubHand(keyWord);\r\n        setKeyWord('');\r\n    }\r\n    return (<header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={onSubmitSearchForm}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\"><BiSearch /></span>\r\n          </button>\r\n          <input\r\n                    className=\"SearchForm-input\"\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                    value={keyWord}\r\n            onChange={hendleInputChanga}\r\n          />\r\n        </form>\r\n      </header>)\r\n};\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n};","import PropTypes from 'prop-types';\r\n\r\nexport default function ImageGalleryItem({urlImage,altImage,idImage,onSubId}) {\r\n const onClickImg = e => {\r\n  onSubId(e.currentTarget.dataset.id)\r\n  }\r\n  return (\r\n      <li className=\"ImageGalleryItem\" >\r\n        <img\r\n          src={urlImage}\r\n          alt={altImage}\r\n          data-id={idImage}\r\n          className=\"ImageGalleryItem-image\"\r\n          onClick={onClickImg}\r\n        />\r\n      </li>)\r\n};\r\n\r\n\r\nImageGalleryItem.propTypes = {\r\n  urlImage: PropTypes.string,\r\n  altImage: PropTypes.string,\r\n  idImage:PropTypes.number,\r\n}\r\n","import ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\nexport default function ImageGallery(props) {\r\n    const onSubIdHend = data => {\r\n    props.onSubIdHends(data);\r\n}\r\nreturn (\r\n            <ul className=\"ImageGallery\" >\r\n                {props.gallery.map(obj => {\r\n                    return (<ImageGalleryItem onSubId={onSubIdHend} urlImage={obj.webformatURL} altImage={obj.tags} urlLargeImage={obj.largeImageURL} idImage={obj.id} key={obj.id}/>);\r\n                })}\r\n            </ul>)\r\n};\r\n","const { useState } = require(\"react\");\r\n// import PropTypes from 'prop-types';\r\n\r\nexport default function Button(props) {\r\n    console.log(props);\r\n    const [page, setPage] = useState(2);\r\n       const onLoadMore = () => {\r\n        setPage(prev => prev + 1 );\r\n        props.onSubPageNum(page);\r\n    }\r\nreturn(<button type=\"button\" onClick={onLoadMore} className=\"Button\">Load more</button>)\r\n};\r\n\r\n// Button.propTypes = {\r\n//     onSubPageNum: PropTypes.func,\r\n// };","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport PropTypes from 'prop-types';\r\nimport { useEffect, useState } from \"react\";\r\nimport ApiId from \"../Services/ApiId\";\r\n\r\nexport default function Modal(props) {\r\n    const [imgUrl, setImgUrl] = useState();\r\n    const [visible,setVisible]=useState(true)\r\n\r\n   const handlerKeyDown = ({ code }) => {\r\n    if (code === 'Escape') {\r\n      props.onCloseHend()\r\n    }\r\n  };\r\n   const onClose = e => {\r\n        if (e.currentTarget === e.target) {\r\n            props.onCloseHend()\r\n        }\r\n    }\r\n    useEffect(()=> {\r\n        window.addEventListener('keydown', handlerKeyDown);\r\n        ApiId(props.imgId).then(({hits})=>{setImgUrl(hits[0].largeImageURL)}).finally(()=>setVisible(false));\r\n    })\r\nreturn (<div className=\"Overlay\" onClick={onClose}>\r\n            <div className=\"Modal\">\r\n                {visible&&<Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n                    width={100}\r\n      />}\r\n                <img src={imgUrl} alt=\"\"/>\r\n            </div>\r\n        </div>)\r\n};\r\nModal.propTypes = {\r\n    imaId: PropTypes.string,\r\n    onCloseHend: PropTypes.func,\r\n}","export default function ApiId(id) {\r\n    const key = '18956584-3ac01e2418e4c39c7eb5dacd9';\r\n    const url = `https://pixabay.com/api/?id=${id}&key=${key}`;\r\n        return fetch(url).then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(new Error('Картинки с таким именем отсутсвуют'));\r\n    });\r\n\r\n};\r\n","import './App.scss';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Searchbar from './Searchbar/Searchbar.jsx';\r\nimport ImageGallery from './ImageGallery/ImageGallery.jsx';\r\nimport Button from './Button/Button';\r\nimport Modal from './Modal/Modal';\r\nimport MainApi from './Services/Api';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport default function App() {\r\n    const [keyWord, setKeyWord] = useState(null);\r\n    const [page, setPage] = useState(1);\r\n    const [images, setImages] = useState([]);\r\n    const [imgIdModal, setImgIdModal] = useState('');\r\n    const [newPageCords, setNewPageCords] = useState(0);\r\n    const [loader, setLoader] = useState(false);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [buttonVisible, setButtonVisible] = useState(false);\r\n\r\n    const toggleLoader = () => {\r\n        setLoader(prev => !prev);\r\n    }\r\n    const toggleModal = () => {\r\n        setShowModal(prev => !prev);\r\n    }\r\n    const onSubKeyWordHandApp = data => {\r\n        setImages([]);\r\n        setKeyWord(data);\r\n        setPage(1);\r\n    }\r\n    const onSubPageNumApp = data => {\r\n        const cords = document.documentElement.scrollHeight - 170;\r\n        setPage(data);\r\n        setNewPageCords(cords);\r\n    }\r\n    const onSubIdHendApp = data => {\r\n        toggleLoader();\r\n        toggleModal();\r\n        setImgIdModal(data);\r\n        toggleLoader();\r\n    }\r\n        const scrollToNextPage = () => {\r\n            window.scrollTo({\r\n                top: newPageCords,\r\n                behavior: 'smooth',\r\n            });\r\n        }\r\n\r\n    useEffect(() => {\r\n        if (keyWord) {\r\n            toggleLoader();\r\n            MainApi(keyWord, page).then(({ hits }) => { setImages(prev => images === [] ? hits : ([...prev, ...hits])); setButtonVisible(true) })\r\n                .finally(() => {\r\n                    toggleLoader();\r\n                    scrollToNextPage();\r\n                });\r\n        }\r\n        \r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [keyWord, page]);\r\n    \r\n    return (<div className=\"main-conteiner\">\r\n        <Searchbar onSubHand={onSubKeyWordHandApp}/>\r\n      <ImageGallery gallery={images} onSubIdHends={ onSubIdHendApp}/>\r\n      {loader && <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n      />}\r\n        {buttonVisible && <Button onSubPageNum={onSubPageNumApp} />}\r\n      {showModal &&\r\n        <Modal\r\n        onCloseHend={toggleModal}\r\n        imgId={imgIdModal}/>}\r\n    </div>\r\n    );\r\n}","export default function MainApi(seachWord,pageNum) {\r\n        const key='18956584-3ac01e2418e4c39c7eb5dacd9';\r\n    const url = `https://pixabay.com/api/?q=${seachWord}&page=${pageNum}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`;\r\n    return fetch(url).then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(new Error('Картинки с таким именем отсутсвуют'));\r\n    });\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />, document.getElementById('root')\r\n);"],"sourceRoot":""}